// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        (unknown)
// source: c_room_draw_guess.proto

package pbclient

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 你画我猜
// 房间游戏阶段
type EDrawStep int32

const (
	EDrawStep_EDrawSetpReady        EDrawStep = 0 // 准备阶段
	EDrawStep_EDrawSetpSelectDrawer EDrawStep = 1 // 选择画图人
	EDrawStep_EDrawSetpSelectWords  EDrawStep = 2 // 选词
	EDrawStep_EDrawSetpDraw         EDrawStep = 3 // 画图
	EDrawStep_EDrawSetpDrawEnd      EDrawStep = 4 // 本轮结束
	EDrawStep_EDrawStepDrawGameEnd  EDrawStep = 5 // 游戏结束
)

// Enum value maps for EDrawStep.
var (
	EDrawStep_name = map[int32]string{
		0: "EDrawSetpReady",
		1: "EDrawSetpSelectDrawer",
		2: "EDrawSetpSelectWords",
		3: "EDrawSetpDraw",
		4: "EDrawSetpDrawEnd",
		5: "EDrawStepDrawGameEnd",
	}
	EDrawStep_value = map[string]int32{
		"EDrawSetpReady":        0,
		"EDrawSetpSelectDrawer": 1,
		"EDrawSetpSelectWords":  2,
		"EDrawSetpDraw":         3,
		"EDrawSetpDrawEnd":      4,
		"EDrawStepDrawGameEnd":  5,
	}
)

func (x EDrawStep) Enum() *EDrawStep {
	p := new(EDrawStep)
	*p = x
	return p
}

func (x EDrawStep) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EDrawStep) Descriptor() protoreflect.EnumDescriptor {
	return file_c_room_draw_guess_proto_enumTypes[0].Descriptor()
}

func (EDrawStep) Type() protoreflect.EnumType {
	return &file_c_room_draw_guess_proto_enumTypes[0]
}

func (x EDrawStep) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EDrawStep.Descriptor instead.
func (EDrawStep) EnumDescriptor() ([]byte, []int) {
	return file_c_room_draw_guess_proto_rawDescGZIP(), []int{0}
}

// 画笔参数
type BrushParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bold  int32   `protobuf:"varint,1,opt,name=Bold,proto3" json:"Bold,omitempty"`          // 粗细参数
	Color []int32 `protobuf:"varint,2,rep,packed,name=Color,proto3" json:"Color,omitempty"` // 颜色
}

func (x *BrushParam) Reset() {
	*x = BrushParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_c_room_draw_guess_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BrushParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrushParam) ProtoMessage() {}

func (x *BrushParam) ProtoReflect() protoreflect.Message {
	mi := &file_c_room_draw_guess_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrushParam.ProtoReflect.Descriptor instead.
func (*BrushParam) Descriptor() ([]byte, []int) {
	return file_c_room_draw_guess_proto_rawDescGZIP(), []int{0}
}

func (x *BrushParam) GetBold() int32 {
	if x != nil {
		return x.Bold
	}
	return 0
}

func (x *BrushParam) GetColor() []int32 {
	if x != nil {
		return x.Color
	}
	return nil
}

// 绘图点
type PainPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PosX int32 `protobuf:"varint,1,opt,name=PosX,proto3" json:"PosX,omitempty"`
	PosY int32 `protobuf:"varint,2,opt,name=PosY,proto3" json:"PosY,omitempty"`
}

func (x *PainPoint) Reset() {
	*x = PainPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_c_room_draw_guess_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PainPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PainPoint) ProtoMessage() {}

func (x *PainPoint) ProtoReflect() protoreflect.Message {
	mi := &file_c_room_draw_guess_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PainPoint.ProtoReflect.Descriptor instead.
func (*PainPoint) Descriptor() ([]byte, []int) {
	return file_c_room_draw_guess_proto_rawDescGZIP(), []int{1}
}

func (x *PainPoint) GetPosX() int32 {
	if x != nil {
		return x.PosX
	}
	return 0
}

func (x *PainPoint) GetPosY() int32 {
	if x != nil {
		return x.PosY
	}
	return 0
}

// 画图数据
type DrawPainData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrushSetting *BrushParam  `protobuf:"bytes,1,opt,name=BrushSetting,proto3" json:"BrushSetting,omitempty"` // 当前画笔设定
	DrawPoints   []*PainPoint `protobuf:"bytes,2,rep,name=DrawPoints,proto3" json:"DrawPoints,omitempty"`     // 本次画的点
}

func (x *DrawPainData) Reset() {
	*x = DrawPainData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_c_room_draw_guess_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DrawPainData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DrawPainData) ProtoMessage() {}

func (x *DrawPainData) ProtoReflect() protoreflect.Message {
	mi := &file_c_room_draw_guess_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DrawPainData.ProtoReflect.Descriptor instead.
func (*DrawPainData) Descriptor() ([]byte, []int) {
	return file_c_room_draw_guess_proto_rawDescGZIP(), []int{2}
}

func (x *DrawPainData) GetBrushSetting() *BrushParam {
	if x != nil {
		return x.BrushSetting
	}
	return nil
}

func (x *DrawPainData) GetDrawPoints() []*PainPoint {
	if x != nil {
		return x.DrawPoints
	}
	return nil
}

// 玩家游戏数据
type DrawPlayerGameData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleID       int64  `protobuf:"varint,1,opt,name=RoleID,proto3" json:"RoleID,omitempty"`
	Nickname     string `protobuf:"bytes,2,opt,name=Nickname,proto3" json:"Nickname,omitempty"`
	Score        int32  `protobuf:"varint,3,opt,name=Score,proto3" json:"Score,omitempty"`
	GuessCorrect int32  `protobuf:"varint,4,opt,name=GuessCorrect,proto3" json:"GuessCorrect,omitempty"` // 猜对数量
	Ready        int32  `protobuf:"varint,5,opt,name=Ready,proto3" json:"Ready,omitempty"`               // 准备状态 1-准备 0-未准备
	TotalScore   int32  `protobuf:"varint,6,opt,name=TotalScore,proto3" json:"TotalScore,omitempty"`     // 游戏总积分
}

func (x *DrawPlayerGameData) Reset() {
	*x = DrawPlayerGameData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_c_room_draw_guess_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DrawPlayerGameData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DrawPlayerGameData) ProtoMessage() {}

func (x *DrawPlayerGameData) ProtoReflect() protoreflect.Message {
	mi := &file_c_room_draw_guess_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DrawPlayerGameData.ProtoReflect.Descriptor instead.
func (*DrawPlayerGameData) Descriptor() ([]byte, []int) {
	return file_c_room_draw_guess_proto_rawDescGZIP(), []int{3}
}

func (x *DrawPlayerGameData) GetRoleID() int64 {
	if x != nil {
		return x.RoleID
	}
	return 0
}

func (x *DrawPlayerGameData) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *DrawPlayerGameData) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *DrawPlayerGameData) GetGuessCorrect() int32 {
	if x != nil {
		return x.GuessCorrect
	}
	return 0
}

func (x *DrawPlayerGameData) GetReady() int32 {
	if x != nil {
		return x.Ready
	}
	return 0
}

func (x *DrawPlayerGameData) GetTotalScore() int32 {
	if x != nil {
		return x.TotalScore
	}
	return 0
}

// 房间游戏数据
type RoomDrawDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxTurnNum      int32                         `protobuf:"varint,1,opt,name=MaxTurnNum,proto3" json:"MaxTurnNum,omitempty"`                                                                                                    // 最大游戏轮数
	DrawTime        int32                         `protobuf:"varint,2,opt,name=DrawTime,proto3" json:"DrawTime,omitempty"`                                                                                                        // 每次绘图时间限制
	DrawEndTime     int64                         `protobuf:"varint,3,opt,name=DrawEndTime,proto3" json:"DrawEndTime,omitempty"`                                                                                                  // 绘图结束时间
	CurTurn         int32                         `protobuf:"varint,4,opt,name=CurTurn,proto3" json:"CurTurn,omitempty"`                                                                                                          // 当前第几轮,从1开始
	RoomStep        int32                         `protobuf:"varint,5,opt,name=RoomStep,proto3" json:"RoomStep,omitempty"`                                                                                                        // 房间游戏阶段 对应 EDrawStep
	StepTime        int64                         `protobuf:"varint,6,opt,name=StepTime,proto3" json:"StepTime,omitempty"`                                                                                                        // 阶段对应的开始时间戳
	CurWords        string                        `protobuf:"bytes,7,opt,name=CurWords,proto3" json:"CurWords,omitempty"`                                                                                                         // 当前单词
	WordsToSelect   []string                      `protobuf:"bytes,8,rep,name=WordsToSelect,proto3" json:"WordsToSelect,omitempty"`                                                                                               // 待选词组列表
	DrawerRoleID    int64                         `protobuf:"varint,9,opt,name=DrawerRoleID,proto3" json:"DrawerRoleID,omitempty"`                                                                                                // 当前画图的玩家
	DrawOpts        []*DrawPainData               `protobuf:"bytes,10,rep,name=DrawOpts,proto3" json:"DrawOpts,omitempty"`                                                                                                        // 画图数据操作记录
	PlayersGameData map[int64]*DrawPlayerGameData `protobuf:"bytes,11,rep,name=PlayersGameData,proto3" json:"PlayersGameData,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // 玩家游戏数据
	WordsType       string                        `protobuf:"bytes,12,opt,name=WordsType,proto3" json:"WordsType,omitempty"`                                                                                                      // 单词类型
}

func (x *RoomDrawDetail) Reset() {
	*x = RoomDrawDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_c_room_draw_guess_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomDrawDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomDrawDetail) ProtoMessage() {}

func (x *RoomDrawDetail) ProtoReflect() protoreflect.Message {
	mi := &file_c_room_draw_guess_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomDrawDetail.ProtoReflect.Descriptor instead.
func (*RoomDrawDetail) Descriptor() ([]byte, []int) {
	return file_c_room_draw_guess_proto_rawDescGZIP(), []int{4}
}

func (x *RoomDrawDetail) GetMaxTurnNum() int32 {
	if x != nil {
		return x.MaxTurnNum
	}
	return 0
}

func (x *RoomDrawDetail) GetDrawTime() int32 {
	if x != nil {
		return x.DrawTime
	}
	return 0
}

func (x *RoomDrawDetail) GetDrawEndTime() int64 {
	if x != nil {
		return x.DrawEndTime
	}
	return 0
}

func (x *RoomDrawDetail) GetCurTurn() int32 {
	if x != nil {
		return x.CurTurn
	}
	return 0
}

func (x *RoomDrawDetail) GetRoomStep() int32 {
	if x != nil {
		return x.RoomStep
	}
	return 0
}

func (x *RoomDrawDetail) GetStepTime() int64 {
	if x != nil {
		return x.StepTime
	}
	return 0
}

func (x *RoomDrawDetail) GetCurWords() string {
	if x != nil {
		return x.CurWords
	}
	return ""
}

func (x *RoomDrawDetail) GetWordsToSelect() []string {
	if x != nil {
		return x.WordsToSelect
	}
	return nil
}

func (x *RoomDrawDetail) GetDrawerRoleID() int64 {
	if x != nil {
		return x.DrawerRoleID
	}
	return 0
}

func (x *RoomDrawDetail) GetDrawOpts() []*DrawPainData {
	if x != nil {
		return x.DrawOpts
	}
	return nil
}

func (x *RoomDrawDetail) GetPlayersGameData() map[int64]*DrawPlayerGameData {
	if x != nil {
		return x.PlayersGameData
	}
	return nil
}

func (x *RoomDrawDetail) GetWordsType() string {
	if x != nil {
		return x.WordsType
	}
	return ""
}

// ECMsgGameReadyOpt              = 1 // 玩家准备操作
type ECMsgGameReadyOptReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ready int32 `protobuf:"varint,1,opt,name=Ready,proto3" json:"Ready,omitempty"` // 1-准备 0-取消准备
}

func (x *ECMsgGameReadyOptReq) Reset() {
	*x = ECMsgGameReadyOptReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_c_room_draw_guess_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ECMsgGameReadyOptReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ECMsgGameReadyOptReq) ProtoMessage() {}

func (x *ECMsgGameReadyOptReq) ProtoReflect() protoreflect.Message {
	mi := &file_c_room_draw_guess_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ECMsgGameReadyOptReq.ProtoReflect.Descriptor instead.
func (*ECMsgGameReadyOptReq) Descriptor() ([]byte, []int) {
	return file_c_room_draw_guess_proto_rawDescGZIP(), []int{5}
}

func (x *ECMsgGameReadyOptReq) GetReady() int32 {
	if x != nil {
		return x.Ready
	}
	return 0
}

type ECMsgGameReadyOptRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ECMsgGameReadyOptRsp) Reset() {
	*x = ECMsgGameReadyOptRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_c_room_draw_guess_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ECMsgGameReadyOptRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ECMsgGameReadyOptRsp) ProtoMessage() {}

func (x *ECMsgGameReadyOptRsp) ProtoReflect() protoreflect.Message {
	mi := &file_c_room_draw_guess_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ECMsgGameReadyOptRsp.ProtoReflect.Descriptor instead.
func (*ECMsgGameReadyOptRsp) Descriptor() ([]byte, []int) {
	return file_c_room_draw_guess_proto_rawDescGZIP(), []int{6}
}

// ECMsgGamePushPlayerReadyStatus = 2 // 推送玩家准备状态
type ECMsgGamePushPlayerReadyStatusNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleID int64 `protobuf:"varint,1,opt,name=RoleID,proto3" json:"RoleID,omitempty"`
	Ready  int32 `protobuf:"varint,2,opt,name=Ready,proto3" json:"Ready,omitempty"` // 1-准备 0-取消准备
}

func (x *ECMsgGamePushPlayerReadyStatusNotify) Reset() {
	*x = ECMsgGamePushPlayerReadyStatusNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_c_room_draw_guess_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ECMsgGamePushPlayerReadyStatusNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ECMsgGamePushPlayerReadyStatusNotify) ProtoMessage() {}

func (x *ECMsgGamePushPlayerReadyStatusNotify) ProtoReflect() protoreflect.Message {
	mi := &file_c_room_draw_guess_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ECMsgGamePushPlayerReadyStatusNotify.ProtoReflect.Descriptor instead.
func (*ECMsgGamePushPlayerReadyStatusNotify) Descriptor() ([]byte, []int) {
	return file_c_room_draw_guess_proto_rawDescGZIP(), []int{7}
}

func (x *ECMsgGamePushPlayerReadyStatusNotify) GetRoleID() int64 {
	if x != nil {
		return x.RoleID
	}
	return 0
}

func (x *ECMsgGamePushPlayerReadyStatusNotify) GetReady() int32 {
	if x != nil {
		return x.Ready
	}
	return 0
}

// ECMsgGameDrawPaint        = 10 // 你画我猜-画图
type ECMsgGameDrawPaintReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurPain *DrawPainData `protobuf:"bytes,1,opt,name=CurPain,proto3" json:"CurPain,omitempty"`
}

func (x *ECMsgGameDrawPaintReq) Reset() {
	*x = ECMsgGameDrawPaintReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_c_room_draw_guess_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ECMsgGameDrawPaintReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ECMsgGameDrawPaintReq) ProtoMessage() {}

func (x *ECMsgGameDrawPaintReq) ProtoReflect() protoreflect.Message {
	mi := &file_c_room_draw_guess_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ECMsgGameDrawPaintReq.ProtoReflect.Descriptor instead.
func (*ECMsgGameDrawPaintReq) Descriptor() ([]byte, []int) {
	return file_c_room_draw_guess_proto_rawDescGZIP(), []int{8}
}

func (x *ECMsgGameDrawPaintReq) GetCurPain() *DrawPainData {
	if x != nil {
		return x.CurPain
	}
	return nil
}

type ECMsgGameDrawPaintRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ECMsgGameDrawPaintRsp) Reset() {
	*x = ECMsgGameDrawPaintRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_c_room_draw_guess_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ECMsgGameDrawPaintRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ECMsgGameDrawPaintRsp) ProtoMessage() {}

func (x *ECMsgGameDrawPaintRsp) ProtoReflect() protoreflect.Message {
	mi := &file_c_room_draw_guess_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ECMsgGameDrawPaintRsp.ProtoReflect.Descriptor instead.
func (*ECMsgGameDrawPaintRsp) Descriptor() ([]byte, []int) {
	return file_c_room_draw_guess_proto_rawDescGZIP(), []int{9}
}

// ECMsgGamePushDrawPaint    = 11 // 你画我猜-同步推送画图数据
type ECMsgGamePushDrawPaintNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleID  int64         `protobuf:"varint,1,opt,name=RoleID,proto3" json:"RoleID,omitempty"`
	CurPain *DrawPainData `protobuf:"bytes,2,opt,name=CurPain,proto3" json:"CurPain,omitempty"`
}

func (x *ECMsgGamePushDrawPaintNotify) Reset() {
	*x = ECMsgGamePushDrawPaintNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_c_room_draw_guess_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ECMsgGamePushDrawPaintNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ECMsgGamePushDrawPaintNotify) ProtoMessage() {}

func (x *ECMsgGamePushDrawPaintNotify) ProtoReflect() protoreflect.Message {
	mi := &file_c_room_draw_guess_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ECMsgGamePushDrawPaintNotify.ProtoReflect.Descriptor instead.
func (*ECMsgGamePushDrawPaintNotify) Descriptor() ([]byte, []int) {
	return file_c_room_draw_guess_proto_rawDescGZIP(), []int{10}
}

func (x *ECMsgGamePushDrawPaintNotify) GetRoleID() int64 {
	if x != nil {
		return x.RoleID
	}
	return 0
}

func (x *ECMsgGamePushDrawPaintNotify) GetCurPain() *DrawPainData {
	if x != nil {
		return x.CurPain
	}
	return nil
}

// ECMsgGameDrawGuessWords   = 12 // 你画我猜-猜词
type ECMsgGameDrawGuessWordsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Words string `protobuf:"bytes,1,opt,name=Words,proto3" json:"Words,omitempty"`
}

func (x *ECMsgGameDrawGuessWordsReq) Reset() {
	*x = ECMsgGameDrawGuessWordsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_c_room_draw_guess_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ECMsgGameDrawGuessWordsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ECMsgGameDrawGuessWordsReq) ProtoMessage() {}

func (x *ECMsgGameDrawGuessWordsReq) ProtoReflect() protoreflect.Message {
	mi := &file_c_room_draw_guess_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ECMsgGameDrawGuessWordsReq.ProtoReflect.Descriptor instead.
func (*ECMsgGameDrawGuessWordsReq) Descriptor() ([]byte, []int) {
	return file_c_room_draw_guess_proto_rawDescGZIP(), []int{11}
}

func (x *ECMsgGameDrawGuessWordsReq) GetWords() string {
	if x != nil {
		return x.Words
	}
	return ""
}

type ECMsgGameDrawGuessWordsRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ECMsgGameDrawGuessWordsRsp) Reset() {
	*x = ECMsgGameDrawGuessWordsRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_c_room_draw_guess_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ECMsgGameDrawGuessWordsRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ECMsgGameDrawGuessWordsRsp) ProtoMessage() {}

func (x *ECMsgGameDrawGuessWordsRsp) ProtoReflect() protoreflect.Message {
	mi := &file_c_room_draw_guess_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ECMsgGameDrawGuessWordsRsp.ProtoReflect.Descriptor instead.
func (*ECMsgGameDrawGuessWordsRsp) Descriptor() ([]byte, []int) {
	return file_c_room_draw_guess_proto_rawDescGZIP(), []int{12}
}

// ECMsgGamePushDrawGuess    = 13 // 你画我猜-推送玩家的猜词
type ECMsgGamePushDrawGuessNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleID int64  `protobuf:"varint,1,opt,name=RoleID,proto3" json:"RoleID,omitempty"`
	Words  string `protobuf:"bytes,2,opt,name=Words,proto3" json:"Words,omitempty"`
}

func (x *ECMsgGamePushDrawGuessNotify) Reset() {
	*x = ECMsgGamePushDrawGuessNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_c_room_draw_guess_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ECMsgGamePushDrawGuessNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ECMsgGamePushDrawGuessNotify) ProtoMessage() {}

func (x *ECMsgGamePushDrawGuessNotify) ProtoReflect() protoreflect.Message {
	mi := &file_c_room_draw_guess_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ECMsgGamePushDrawGuessNotify.ProtoReflect.Descriptor instead.
func (*ECMsgGamePushDrawGuessNotify) Descriptor() ([]byte, []int) {
	return file_c_room_draw_guess_proto_rawDescGZIP(), []int{13}
}

func (x *ECMsgGamePushDrawGuessNotify) GetRoleID() int64 {
	if x != nil {
		return x.RoleID
	}
	return 0
}

func (x *ECMsgGamePushDrawGuessNotify) GetWords() string {
	if x != nil {
		return x.Words
	}
	return ""
}

// ECMsgGameGrawSetting      = 14 // 你画我猜-房主设定游戏规则
type ECMsgGameGrawSettingReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxTurnNum int32 `protobuf:"varint,1,opt,name=MaxTurnNum,proto3" json:"MaxTurnNum,omitempty"` // 最大游戏轮数
	DrawTime   int32 `protobuf:"varint,2,opt,name=DrawTime,proto3" json:"DrawTime,omitempty"`     // 每次绘图时间限制
}

func (x *ECMsgGameGrawSettingReq) Reset() {
	*x = ECMsgGameGrawSettingReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_c_room_draw_guess_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ECMsgGameGrawSettingReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ECMsgGameGrawSettingReq) ProtoMessage() {}

func (x *ECMsgGameGrawSettingReq) ProtoReflect() protoreflect.Message {
	mi := &file_c_room_draw_guess_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ECMsgGameGrawSettingReq.ProtoReflect.Descriptor instead.
func (*ECMsgGameGrawSettingReq) Descriptor() ([]byte, []int) {
	return file_c_room_draw_guess_proto_rawDescGZIP(), []int{14}
}

func (x *ECMsgGameGrawSettingReq) GetMaxTurnNum() int32 {
	if x != nil {
		return x.MaxTurnNum
	}
	return 0
}

func (x *ECMsgGameGrawSettingReq) GetDrawTime() int32 {
	if x != nil {
		return x.DrawTime
	}
	return 0
}

type ECMsgGameGrawSettingRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ECMsgGameGrawSettingRsp) Reset() {
	*x = ECMsgGameGrawSettingRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_c_room_draw_guess_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ECMsgGameGrawSettingRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ECMsgGameGrawSettingRsp) ProtoMessage() {}

func (x *ECMsgGameGrawSettingRsp) ProtoReflect() protoreflect.Message {
	mi := &file_c_room_draw_guess_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ECMsgGameGrawSettingRsp.ProtoReflect.Descriptor instead.
func (*ECMsgGameGrawSettingRsp) Descriptor() ([]byte, []int) {
	return file_c_room_draw_guess_proto_rawDescGZIP(), []int{15}
}

// ECMsgGamePushDrawRoomData = 15 // 你画我猜-推送画图房间游戏数据更新
type ECMsgGamePushDrawRoomDataNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomGameData *RoomDrawDetail `protobuf:"bytes,1,opt,name=RoomGameData,proto3" json:"RoomGameData,omitempty"`
}

func (x *ECMsgGamePushDrawRoomDataNotify) Reset() {
	*x = ECMsgGamePushDrawRoomDataNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_c_room_draw_guess_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ECMsgGamePushDrawRoomDataNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ECMsgGamePushDrawRoomDataNotify) ProtoMessage() {}

func (x *ECMsgGamePushDrawRoomDataNotify) ProtoReflect() protoreflect.Message {
	mi := &file_c_room_draw_guess_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ECMsgGamePushDrawRoomDataNotify.ProtoReflect.Descriptor instead.
func (*ECMsgGamePushDrawRoomDataNotify) Descriptor() ([]byte, []int) {
	return file_c_room_draw_guess_proto_rawDescGZIP(), []int{16}
}

func (x *ECMsgGamePushDrawRoomDataNotify) GetRoomGameData() *RoomDrawDetail {
	if x != nil {
		return x.RoomGameData
	}
	return nil
}

// ECMsgGameDrawSelectWords  = 16 // 选择词语
type ECMsgGameDrawSelectWordsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Idx int32 `protobuf:"varint,1,opt,name=Idx,proto3" json:"Idx,omitempty"` // 词组列表的下标 从0开始
}

func (x *ECMsgGameDrawSelectWordsReq) Reset() {
	*x = ECMsgGameDrawSelectWordsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_c_room_draw_guess_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ECMsgGameDrawSelectWordsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ECMsgGameDrawSelectWordsReq) ProtoMessage() {}

func (x *ECMsgGameDrawSelectWordsReq) ProtoReflect() protoreflect.Message {
	mi := &file_c_room_draw_guess_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ECMsgGameDrawSelectWordsReq.ProtoReflect.Descriptor instead.
func (*ECMsgGameDrawSelectWordsReq) Descriptor() ([]byte, []int) {
	return file_c_room_draw_guess_proto_rawDescGZIP(), []int{17}
}

func (x *ECMsgGameDrawSelectWordsReq) GetIdx() int32 {
	if x != nil {
		return x.Idx
	}
	return 0
}

type ECMsgGameDrawSelectWordsRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ECMsgGameDrawSelectWordsRsp) Reset() {
	*x = ECMsgGameDrawSelectWordsRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_c_room_draw_guess_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ECMsgGameDrawSelectWordsRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ECMsgGameDrawSelectWordsRsp) ProtoMessage() {}

func (x *ECMsgGameDrawSelectWordsRsp) ProtoReflect() protoreflect.Message {
	mi := &file_c_room_draw_guess_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ECMsgGameDrawSelectWordsRsp.ProtoReflect.Descriptor instead.
func (*ECMsgGameDrawSelectWordsRsp) Descriptor() ([]byte, []int) {
	return file_c_room_draw_guess_proto_rawDescGZIP(), []int{18}
}

// ECMsgGamePushDrawSetting  = 17 // 你画我猜-推送设置
type ECMsgGamePushDrawSettingNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxTurnNum int32 `protobuf:"varint,1,opt,name=MaxTurnNum,proto3" json:"MaxTurnNum,omitempty"` // 最大游戏轮数
	DrawTime   int32 `protobuf:"varint,2,opt,name=DrawTime,proto3" json:"DrawTime,omitempty"`     // 每次绘图时间限制
}

func (x *ECMsgGamePushDrawSettingNotify) Reset() {
	*x = ECMsgGamePushDrawSettingNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_c_room_draw_guess_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ECMsgGamePushDrawSettingNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ECMsgGamePushDrawSettingNotify) ProtoMessage() {}

func (x *ECMsgGamePushDrawSettingNotify) ProtoReflect() protoreflect.Message {
	mi := &file_c_room_draw_guess_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ECMsgGamePushDrawSettingNotify.ProtoReflect.Descriptor instead.
func (*ECMsgGamePushDrawSettingNotify) Descriptor() ([]byte, []int) {
	return file_c_room_draw_guess_proto_rawDescGZIP(), []int{19}
}

func (x *ECMsgGamePushDrawSettingNotify) GetMaxTurnNum() int32 {
	if x != nil {
		return x.MaxTurnNum
	}
	return 0
}

func (x *ECMsgGamePushDrawSettingNotify) GetDrawTime() int32 {
	if x != nil {
		return x.DrawTime
	}
	return 0
}

var File_c_room_draw_guess_proto protoreflect.FileDescriptor

var file_c_room_draw_guess_proto_rawDesc = []byte{
	0x0a, 0x17, 0x63, 0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x64, 0x72, 0x61, 0x77, 0x5f, 0x67, 0x75,
	0x65, 0x73, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x70, 0x62, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x22, 0x36, 0x0a, 0x0a, 0x42, 0x72, 0x75, 0x73, 0x68, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x12, 0x12, 0x0a, 0x04, 0x42, 0x6f, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x42, 0x6f, 0x6c, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x05, 0x52, 0x05, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x22, 0x33, 0x0a, 0x09, 0x50,
	0x61, 0x69, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x6f, 0x73, 0x58,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x50, 0x6f, 0x73, 0x58, 0x12, 0x12, 0x0a, 0x04,
	0x50, 0x6f, 0x73, 0x59, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x50, 0x6f, 0x73, 0x59,
	0x22, 0x7d, 0x0a, 0x0c, 0x44, 0x72, 0x61, 0x77, 0x50, 0x61, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x38, 0x0a, 0x0c, 0x42, 0x72, 0x75, 0x73, 0x68, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x62, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x42, 0x72, 0x75, 0x73, 0x68, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x0c, 0x42, 0x72,
	0x75, 0x73, 0x68, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x33, 0x0a, 0x0a, 0x44, 0x72,
	0x61, 0x77, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x70, 0x62, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x61, 0x69, 0x6e, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x52, 0x0a, 0x44, 0x72, 0x61, 0x77, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x22,
	0xb8, 0x01, 0x0a, 0x12, 0x44, 0x72, 0x61, 0x77, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x61,
	0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x44, 0x12, 0x1a,
	0x0a, 0x08, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x47, 0x75, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x47, 0x75, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x72,
	0x72, 0x65, 0x63, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x52, 0x65, 0x61, 0x64, 0x79, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x52, 0x65, 0x61, 0x64, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x22, 0xb3, 0x04, 0x0a, 0x0e, 0x52,
	0x6f, 0x6f, 0x6d, 0x44, 0x72, 0x61, 0x77, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1e, 0x0a,
	0x0a, 0x4d, 0x61, 0x78, 0x54, 0x75, 0x72, 0x6e, 0x4e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x4d, 0x61, 0x78, 0x54, 0x75, 0x72, 0x6e, 0x4e, 0x75, 0x6d, 0x12, 0x1a, 0x0a,
	0x08, 0x44, 0x72, 0x61, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x44, 0x72, 0x61, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x72, 0x61,
	0x77, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x44, 0x72, 0x61, 0x77, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43,
	0x75, 0x72, 0x54, 0x75, 0x72, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x43, 0x75,
	0x72, 0x54, 0x75, 0x72, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x65,
	0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x65,
	0x70, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x74, 0x65, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x53, 0x74, 0x65, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x43, 0x75, 0x72, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x43, 0x75, 0x72, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x57, 0x6f, 0x72,
	0x64, 0x73, 0x54, 0x6f, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0d, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x54, 0x6f, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x12,
	0x22, 0x0a, 0x0c, 0x44, 0x72, 0x61, 0x77, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x44, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x44, 0x72, 0x61, 0x77, 0x65, 0x72, 0x52, 0x6f, 0x6c,
	0x65, 0x49, 0x44, 0x12, 0x32, 0x0a, 0x08, 0x44, 0x72, 0x61, 0x77, 0x4f, 0x70, 0x74, 0x73, 0x18,
	0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x62, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x44, 0x72, 0x61, 0x77, 0x50, 0x61, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x44,
	0x72, 0x61, 0x77, 0x4f, 0x70, 0x74, 0x73, 0x12, 0x57, 0x0a, 0x0f, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x73, 0x47, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2d, 0x2e, 0x70, 0x62, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x6f, 0x6f, 0x6d,
	0x44, 0x72, 0x61, 0x77, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x73, 0x47, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x0f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x47, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x1c, 0x0a, 0x09, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x54, 0x79, 0x70, 0x65, 0x1a, 0x60,
	0x0a, 0x14, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x47, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x32, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x62, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x44, 0x72, 0x61, 0x77, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x61, 0x6d,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x2c, 0x0a, 0x14, 0x45, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x61,
	0x64, 0x79, 0x4f, 0x70, 0x74, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x52, 0x65, 0x61, 0x64,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x52, 0x65, 0x61, 0x64, 0x79, 0x22, 0x16,
	0x0a, 0x14, 0x45, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x61, 0x64, 0x79,
	0x4f, 0x70, 0x74, 0x52, 0x73, 0x70, 0x22, 0x54, 0x0a, 0x24, 0x45, 0x43, 0x4d, 0x73, 0x67, 0x47,
	0x61, 0x6d, 0x65, 0x50, 0x75, 0x73, 0x68, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x61,
	0x64, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x16,
	0x0a, 0x06, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x52, 0x6f, 0x6c, 0x65, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x52, 0x65, 0x61, 0x64, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x52, 0x65, 0x61, 0x64, 0x79, 0x22, 0x49, 0x0a, 0x15,
	0x45, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x61, 0x6d, 0x65, 0x44, 0x72, 0x61, 0x77, 0x50, 0x61, 0x69,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x30, 0x0a, 0x07, 0x43, 0x75, 0x72, 0x50, 0x61, 0x69, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x62, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x44, 0x72, 0x61, 0x77, 0x50, 0x61, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07,
	0x43, 0x75, 0x72, 0x50, 0x61, 0x69, 0x6e, 0x22, 0x17, 0x0a, 0x15, 0x45, 0x43, 0x4d, 0x73, 0x67,
	0x47, 0x61, 0x6d, 0x65, 0x44, 0x72, 0x61, 0x77, 0x50, 0x61, 0x69, 0x6e, 0x74, 0x52, 0x73, 0x70,
	0x22, 0x68, 0x0a, 0x1c, 0x45, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x75, 0x73,
	0x68, 0x44, 0x72, 0x61, 0x77, 0x50, 0x61, 0x69, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x44, 0x12, 0x30, 0x0a, 0x07, 0x43, 0x75, 0x72, 0x50,
	0x61, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x62, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x72, 0x61, 0x77, 0x50, 0x61, 0x69, 0x6e, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x07, 0x43, 0x75, 0x72, 0x50, 0x61, 0x69, 0x6e, 0x22, 0x32, 0x0a, 0x1a, 0x45, 0x43,
	0x4d, 0x73, 0x67, 0x47, 0x61, 0x6d, 0x65, 0x44, 0x72, 0x61, 0x77, 0x47, 0x75, 0x65, 0x73, 0x73,
	0x57, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x57, 0x6f, 0x72, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x22, 0x1c,
	0x0a, 0x1a, 0x45, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x61, 0x6d, 0x65, 0x44, 0x72, 0x61, 0x77, 0x47,
	0x75, 0x65, 0x73, 0x73, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x73, 0x70, 0x22, 0x4c, 0x0a, 0x1c,
	0x45, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x75, 0x73, 0x68, 0x44, 0x72, 0x61,
	0x77, 0x47, 0x75, 0x65, 0x73, 0x73, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x16, 0x0a, 0x06,
	0x52, 0x6f, 0x6c, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x52, 0x6f,
	0x6c, 0x65, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x22, 0x55, 0x0a, 0x17, 0x45, 0x43,
	0x4d, 0x73, 0x67, 0x47, 0x61, 0x6d, 0x65, 0x47, 0x72, 0x61, 0x77, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x4d, 0x61, 0x78, 0x54, 0x75, 0x72, 0x6e,
	0x4e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x4d, 0x61, 0x78, 0x54, 0x75,
	0x72, 0x6e, 0x4e, 0x75, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x72, 0x61, 0x77, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x44, 0x72, 0x61, 0x77, 0x54, 0x69, 0x6d,
	0x65, 0x22, 0x19, 0x0a, 0x17, 0x45, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x61, 0x6d, 0x65, 0x47, 0x72,
	0x61, 0x77, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x73, 0x70, 0x22, 0x5f, 0x0a, 0x1f,
	0x45, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x75, 0x73, 0x68, 0x44, 0x72, 0x61,
	0x77, 0x52, 0x6f, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12,
	0x3c, 0x0a, 0x0c, 0x52, 0x6f, 0x6f, 0x6d, 0x47, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x62, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x44, 0x72, 0x61, 0x77, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x0c, 0x52, 0x6f, 0x6f, 0x6d, 0x47, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0x2f, 0x0a,
	0x1b, 0x45, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x61, 0x6d, 0x65, 0x44, 0x72, 0x61, 0x77, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03,
	0x49, 0x64, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x49, 0x64, 0x78, 0x22, 0x1d,
	0x0a, 0x1b, 0x45, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x61, 0x6d, 0x65, 0x44, 0x72, 0x61, 0x77, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x73, 0x70, 0x22, 0x5c, 0x0a,
	0x1e, 0x45, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x75, 0x73, 0x68, 0x44, 0x72,
	0x61, 0x77, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12,
	0x1e, 0x0a, 0x0a, 0x4d, 0x61, 0x78, 0x54, 0x75, 0x72, 0x6e, 0x4e, 0x75, 0x6d, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x4d, 0x61, 0x78, 0x54, 0x75, 0x72, 0x6e, 0x4e, 0x75, 0x6d, 0x12,
	0x1a, 0x0a, 0x08, 0x44, 0x72, 0x61, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x44, 0x72, 0x61, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x2a, 0x97, 0x01, 0x0a, 0x09,
	0x45, 0x44, 0x72, 0x61, 0x77, 0x53, 0x74, 0x65, 0x70, 0x12, 0x12, 0x0a, 0x0e, 0x45, 0x44, 0x72,
	0x61, 0x77, 0x53, 0x65, 0x74, 0x70, 0x52, 0x65, 0x61, 0x64, 0x79, 0x10, 0x00, 0x12, 0x19, 0x0a,
	0x15, 0x45, 0x44, 0x72, 0x61, 0x77, 0x53, 0x65, 0x74, 0x70, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x44, 0x72, 0x61, 0x77, 0x65, 0x72, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x45, 0x44, 0x72, 0x61,
	0x77, 0x53, 0x65, 0x74, 0x70, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x57, 0x6f, 0x72, 0x64, 0x73,
	0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x45, 0x44, 0x72, 0x61, 0x77, 0x53, 0x65, 0x74, 0x70, 0x44,
	0x72, 0x61, 0x77, 0x10, 0x03, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x44, 0x72, 0x61, 0x77, 0x53, 0x65,
	0x74, 0x70, 0x44, 0x72, 0x61, 0x77, 0x45, 0x6e, 0x64, 0x10, 0x04, 0x12, 0x18, 0x0a, 0x14, 0x45,
	0x44, 0x72, 0x61, 0x77, 0x53, 0x74, 0x65, 0x70, 0x44, 0x72, 0x61, 0x77, 0x47, 0x61, 0x6d, 0x65,
	0x45, 0x6e, 0x64, 0x10, 0x05, 0x42, 0x1a, 0x5a, 0x18, 0x72, 0x6f, 0x6f, 0x6d, 0x63, 0x65, 0x6c,
	0x6c, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x62, 0x2f, 0x70, 0x62, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_c_room_draw_guess_proto_rawDescOnce sync.Once
	file_c_room_draw_guess_proto_rawDescData = file_c_room_draw_guess_proto_rawDesc
)

func file_c_room_draw_guess_proto_rawDescGZIP() []byte {
	file_c_room_draw_guess_proto_rawDescOnce.Do(func() {
		file_c_room_draw_guess_proto_rawDescData = protoimpl.X.CompressGZIP(file_c_room_draw_guess_proto_rawDescData)
	})
	return file_c_room_draw_guess_proto_rawDescData
}

var file_c_room_draw_guess_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_c_room_draw_guess_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_c_room_draw_guess_proto_goTypes = []interface{}{
	(EDrawStep)(0),                               // 0: pbclient.EDrawStep
	(*BrushParam)(nil),                           // 1: pbclient.BrushParam
	(*PainPoint)(nil),                            // 2: pbclient.PainPoint
	(*DrawPainData)(nil),                         // 3: pbclient.DrawPainData
	(*DrawPlayerGameData)(nil),                   // 4: pbclient.DrawPlayerGameData
	(*RoomDrawDetail)(nil),                       // 5: pbclient.RoomDrawDetail
	(*ECMsgGameReadyOptReq)(nil),                 // 6: pbclient.ECMsgGameReadyOptReq
	(*ECMsgGameReadyOptRsp)(nil),                 // 7: pbclient.ECMsgGameReadyOptRsp
	(*ECMsgGamePushPlayerReadyStatusNotify)(nil), // 8: pbclient.ECMsgGamePushPlayerReadyStatusNotify
	(*ECMsgGameDrawPaintReq)(nil),                // 9: pbclient.ECMsgGameDrawPaintReq
	(*ECMsgGameDrawPaintRsp)(nil),                // 10: pbclient.ECMsgGameDrawPaintRsp
	(*ECMsgGamePushDrawPaintNotify)(nil),         // 11: pbclient.ECMsgGamePushDrawPaintNotify
	(*ECMsgGameDrawGuessWordsReq)(nil),           // 12: pbclient.ECMsgGameDrawGuessWordsReq
	(*ECMsgGameDrawGuessWordsRsp)(nil),           // 13: pbclient.ECMsgGameDrawGuessWordsRsp
	(*ECMsgGamePushDrawGuessNotify)(nil),         // 14: pbclient.ECMsgGamePushDrawGuessNotify
	(*ECMsgGameGrawSettingReq)(nil),              // 15: pbclient.ECMsgGameGrawSettingReq
	(*ECMsgGameGrawSettingRsp)(nil),              // 16: pbclient.ECMsgGameGrawSettingRsp
	(*ECMsgGamePushDrawRoomDataNotify)(nil),      // 17: pbclient.ECMsgGamePushDrawRoomDataNotify
	(*ECMsgGameDrawSelectWordsReq)(nil),          // 18: pbclient.ECMsgGameDrawSelectWordsReq
	(*ECMsgGameDrawSelectWordsRsp)(nil),          // 19: pbclient.ECMsgGameDrawSelectWordsRsp
	(*ECMsgGamePushDrawSettingNotify)(nil),       // 20: pbclient.ECMsgGamePushDrawSettingNotify
	nil,                                          // 21: pbclient.RoomDrawDetail.PlayersGameDataEntry
}
var file_c_room_draw_guess_proto_depIdxs = []int32{
	1,  // 0: pbclient.DrawPainData.BrushSetting:type_name -> pbclient.BrushParam
	2,  // 1: pbclient.DrawPainData.DrawPoints:type_name -> pbclient.PainPoint
	3,  // 2: pbclient.RoomDrawDetail.DrawOpts:type_name -> pbclient.DrawPainData
	21, // 3: pbclient.RoomDrawDetail.PlayersGameData:type_name -> pbclient.RoomDrawDetail.PlayersGameDataEntry
	3,  // 4: pbclient.ECMsgGameDrawPaintReq.CurPain:type_name -> pbclient.DrawPainData
	3,  // 5: pbclient.ECMsgGamePushDrawPaintNotify.CurPain:type_name -> pbclient.DrawPainData
	5,  // 6: pbclient.ECMsgGamePushDrawRoomDataNotify.RoomGameData:type_name -> pbclient.RoomDrawDetail
	4,  // 7: pbclient.RoomDrawDetail.PlayersGameDataEntry.value:type_name -> pbclient.DrawPlayerGameData
	8,  // [8:8] is the sub-list for method output_type
	8,  // [8:8] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_c_room_draw_guess_proto_init() }
func file_c_room_draw_guess_proto_init() {
	if File_c_room_draw_guess_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_c_room_draw_guess_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BrushParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_c_room_draw_guess_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PainPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_c_room_draw_guess_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DrawPainData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_c_room_draw_guess_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DrawPlayerGameData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_c_room_draw_guess_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomDrawDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_c_room_draw_guess_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ECMsgGameReadyOptReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_c_room_draw_guess_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ECMsgGameReadyOptRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_c_room_draw_guess_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ECMsgGamePushPlayerReadyStatusNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_c_room_draw_guess_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ECMsgGameDrawPaintReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_c_room_draw_guess_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ECMsgGameDrawPaintRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_c_room_draw_guess_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ECMsgGamePushDrawPaintNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_c_room_draw_guess_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ECMsgGameDrawGuessWordsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_c_room_draw_guess_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ECMsgGameDrawGuessWordsRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_c_room_draw_guess_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ECMsgGamePushDrawGuessNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_c_room_draw_guess_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ECMsgGameGrawSettingReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_c_room_draw_guess_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ECMsgGameGrawSettingRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_c_room_draw_guess_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ECMsgGamePushDrawRoomDataNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_c_room_draw_guess_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ECMsgGameDrawSelectWordsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_c_room_draw_guess_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ECMsgGameDrawSelectWordsRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_c_room_draw_guess_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ECMsgGamePushDrawSettingNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_c_room_draw_guess_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_c_room_draw_guess_proto_goTypes,
		DependencyIndexes: file_c_room_draw_guess_proto_depIdxs,
		EnumInfos:         file_c_room_draw_guess_proto_enumTypes,
		MessageInfos:      file_c_room_draw_guess_proto_msgTypes,
	}.Build()
	File_c_room_draw_guess_proto = out.File
	file_c_room_draw_guess_proto_rawDesc = nil
	file_c_room_draw_guess_proto_goTypes = nil
	file_c_room_draw_guess_proto_depIdxs = nil
}
